--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone II" LPM_DECODES=16 LPM_WIDTH=4 data enable eq
--VERSION_BEGIN 9.0 cbx_cycloneii 2008:05:19:10:57:37:SJ cbx_lpm_add_sub 2008:12:09:22:11:50:SJ cbx_lpm_compare 2009:02:03:01:43:16:SJ cbx_lpm_decode 2008:05:19:10:39:27:SJ cbx_mgl 2009:01:29:16:12:07:SJ cbx_stratix 2008:09:18:16:08:35:SJ cbx_stratixii 2008:11:14:16:08:42:SJ  VERSION_END


-- Copyright (C) 1991-2009 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 18 
SUBDESIGN decode_ppa
( 
	data[3..0]	:	input;
	enable	:	input;
	eq[15..0]	:	output;
) 
VARIABLE 
	data_wire[3..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[15..0]	: WIRE;
	eq_wire[15..0]	: WIRE;
	w_anode1691w[1..0]	: WIRE;
	w_anode1700w[3..0]	: WIRE;
	w_anode1717w[3..0]	: WIRE;
	w_anode1727w[3..0]	: WIRE;
	w_anode1737w[3..0]	: WIRE;
	w_anode1747w[3..0]	: WIRE;
	w_anode1757w[3..0]	: WIRE;
	w_anode1767w[3..0]	: WIRE;
	w_anode1777w[3..0]	: WIRE;
	w_anode1789w[1..0]	: WIRE;
	w_anode1796w[3..0]	: WIRE;
	w_anode1807w[3..0]	: WIRE;
	w_anode1817w[3..0]	: WIRE;
	w_anode1827w[3..0]	: WIRE;
	w_anode1837w[3..0]	: WIRE;
	w_anode1847w[3..0]	: WIRE;
	w_anode1857w[3..0]	: WIRE;
	w_anode1867w[3..0]	: WIRE;
	w_data1689w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[15..0] = eq_wire[15..0];
	eq_wire[] = ( ( w_anode1867w[3..3], w_anode1857w[3..3], w_anode1847w[3..3], w_anode1837w[3..3], w_anode1827w[3..3], w_anode1817w[3..3], w_anode1807w[3..3], w_anode1796w[3..3]), ( w_anode1777w[3..3], w_anode1767w[3..3], w_anode1757w[3..3], w_anode1747w[3..3], w_anode1737w[3..3], w_anode1727w[3..3], w_anode1717w[3..3], w_anode1700w[3..3]));
	w_anode1691w[] = ( (w_anode1691w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode1700w[] = ( (w_anode1700w[2..2] & (! w_data1689w[2..2])), (w_anode1700w[1..1] & (! w_data1689w[1..1])), (w_anode1700w[0..0] & (! w_data1689w[0..0])), w_anode1691w[1..1]);
	w_anode1717w[] = ( (w_anode1717w[2..2] & (! w_data1689w[2..2])), (w_anode1717w[1..1] & (! w_data1689w[1..1])), (w_anode1717w[0..0] & w_data1689w[0..0]), w_anode1691w[1..1]);
	w_anode1727w[] = ( (w_anode1727w[2..2] & (! w_data1689w[2..2])), (w_anode1727w[1..1] & w_data1689w[1..1]), (w_anode1727w[0..0] & (! w_data1689w[0..0])), w_anode1691w[1..1]);
	w_anode1737w[] = ( (w_anode1737w[2..2] & (! w_data1689w[2..2])), (w_anode1737w[1..1] & w_data1689w[1..1]), (w_anode1737w[0..0] & w_data1689w[0..0]), w_anode1691w[1..1]);
	w_anode1747w[] = ( (w_anode1747w[2..2] & w_data1689w[2..2]), (w_anode1747w[1..1] & (! w_data1689w[1..1])), (w_anode1747w[0..0] & (! w_data1689w[0..0])), w_anode1691w[1..1]);
	w_anode1757w[] = ( (w_anode1757w[2..2] & w_data1689w[2..2]), (w_anode1757w[1..1] & (! w_data1689w[1..1])), (w_anode1757w[0..0] & w_data1689w[0..0]), w_anode1691w[1..1]);
	w_anode1767w[] = ( (w_anode1767w[2..2] & w_data1689w[2..2]), (w_anode1767w[1..1] & w_data1689w[1..1]), (w_anode1767w[0..0] & (! w_data1689w[0..0])), w_anode1691w[1..1]);
	w_anode1777w[] = ( (w_anode1777w[2..2] & w_data1689w[2..2]), (w_anode1777w[1..1] & w_data1689w[1..1]), (w_anode1777w[0..0] & w_data1689w[0..0]), w_anode1691w[1..1]);
	w_anode1789w[] = ( (w_anode1789w[0..0] & data_wire[3..3]), enable_wire);
	w_anode1796w[] = ( (w_anode1796w[2..2] & (! w_data1689w[2..2])), (w_anode1796w[1..1] & (! w_data1689w[1..1])), (w_anode1796w[0..0] & (! w_data1689w[0..0])), w_anode1789w[1..1]);
	w_anode1807w[] = ( (w_anode1807w[2..2] & (! w_data1689w[2..2])), (w_anode1807w[1..1] & (! w_data1689w[1..1])), (w_anode1807w[0..0] & w_data1689w[0..0]), w_anode1789w[1..1]);
	w_anode1817w[] = ( (w_anode1817w[2..2] & (! w_data1689w[2..2])), (w_anode1817w[1..1] & w_data1689w[1..1]), (w_anode1817w[0..0] & (! w_data1689w[0..0])), w_anode1789w[1..1]);
	w_anode1827w[] = ( (w_anode1827w[2..2] & (! w_data1689w[2..2])), (w_anode1827w[1..1] & w_data1689w[1..1]), (w_anode1827w[0..0] & w_data1689w[0..0]), w_anode1789w[1..1]);
	w_anode1837w[] = ( (w_anode1837w[2..2] & w_data1689w[2..2]), (w_anode1837w[1..1] & (! w_data1689w[1..1])), (w_anode1837w[0..0] & (! w_data1689w[0..0])), w_anode1789w[1..1]);
	w_anode1847w[] = ( (w_anode1847w[2..2] & w_data1689w[2..2]), (w_anode1847w[1..1] & (! w_data1689w[1..1])), (w_anode1847w[0..0] & w_data1689w[0..0]), w_anode1789w[1..1]);
	w_anode1857w[] = ( (w_anode1857w[2..2] & w_data1689w[2..2]), (w_anode1857w[1..1] & w_data1689w[1..1]), (w_anode1857w[0..0] & (! w_data1689w[0..0])), w_anode1789w[1..1]);
	w_anode1867w[] = ( (w_anode1867w[2..2] & w_data1689w[2..2]), (w_anode1867w[1..1] & w_data1689w[1..1]), (w_anode1867w[0..0] & w_data1689w[0..0]), w_anode1789w[1..1]);
	w_data1689w[2..0] = data_wire[2..0];
END;
--VALID FILE
